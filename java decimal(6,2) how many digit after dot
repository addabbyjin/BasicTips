question:If I have a datatype of decimal(6, 2) what would a sample data be?

I'm using ASP.NET MVC if that makes a difference. Thanks

answer:Assuming you mean that the database type is decimal(6, 2), then this means that your column is set up to store 6 places (scale), with 2 to the right of the decimal (precision). You should treat this as a decimal CLR type.

A sample would be 1234.56.


question:
How to get the double value that is only two digit after decimal point.

for example

if

i=348842.
double i2=i/60000;
tv.setText(String.valueOf(i2));
this code generating 5.81403333.

But I want only 5.81.

So what shoud I do?

answer:
Use DecimalFormat.

DecimalFormat is a concrete subclass of NumberFormat that formats decimal numbers. It has a variety of features designed to make it possible to parse and format numbers in any locale, including support for Western, Arabic, and Indic digits. It also supports different kinds of numbers, including integers (123), fixed-point numbers (123.4), scientific notation (1.23E4), percentages (12%), and currency amounts ($123). All of these can be localized.

Code snippet -

double i2=i/60000;
tv.setText(new DecimalFormat("##.##").format(i2));
Output -

5.81

https://stackoverflow.com/questions/10959424/show-only-two-digit-after-decimal
-----------------------------------------------------------------------------------------------------------
How about String.format("%.2f", i2)?
-----------------------------------------------------------------------------------------------------------
java 四舍五入保留小数
 
// 方式一：
double f = 3.1516;
BigDecimal b = new BigDecimal(f);
double f1 = b.setScale(2, BigDecimal.ROUND_HALF_UP).doubleValue();
 
// 方式二：
new java.text.DecimalFormat("#.00").format(3.1415926);
// #.00 表示两位小数 #.0000四位小数 以此类推…
 
// 方式三：
double d = 3.1415926;
String result = String.format("%.2f", d);
// %.2f %. 表示 小数点前任意位数 2 表示两位小数 格式后的结果为f 表示浮点型。
 
//方法四：
Math.round(5.2644555 * 100) * 0.01d;
//String.format("%0" + 15 + "d", 23) 23不足15为就在前面补0


---------------------------------------------------------------------
your stupid solution!

public class Solution {

    static void plusMinus(int[] arr) {
        // Complete this function
        int countpos=0,countneg=0,countzero=0;
        
        for(int i=0;i<arr.length;i++){
        if(arr[i]<0)
            countneg=countneg+1;
            else{ if (arr[i]>0)
                 countpos=countpos+1;
                 else
                     countzero=countzero+1;
                }
        }
                                                        //decimal(7,6)   
             
       
 //       double a=countpos/arr.length;
//        String a1=Double.toString(a);
//String a=String.format("%.6f",value);
//  String a=new DecimalFormat("#.###########").format(value);
// double a =Double.parseDouble(new DecimalFormat("#.#######").format(value));
// 方式二：
//String a2=new java.text.DecimalFormat("#.00").format(a1);
// #.00 表示两位小数 #.0000四位小数 以此类推…
// 方式二：
//String a2=new java.text.DecimalFormat("#.00").format(a1);
// #.00 表示两位小数 #.0000四位小数 以此类推…
 
                
        float a=0f,b=0f,c=0f;
        a = (float)countpos/arr.length;
        b = (float)countneg/arr.length;
        c = (float)countzero/arr.length;
        System.out.printf("%.6f \n",a);
        System.out.printf("%.6f \n",b);
        System.out.printf("%.6f",c);

 
    }

    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int[] arr = new int[n];
        for(int arr_i = 0; arr_i < n; arr_i++){
            arr[arr_i] = in.nextInt();
        }
        plusMinus(arr);
        in.close();
    }
}
